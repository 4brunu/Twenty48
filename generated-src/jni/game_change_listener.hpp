// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from twenty_forty_eight.idl

#pragma once

#include "djinni_support.hpp"
#include "game_change_listener.hpp"

namespace twentyfortyeight { namespace jni {

class GameChangeListener final : ::djinni::JniInterface<::twentyfortyeight::cpp::GameChangeListener, GameChangeListener> {
public:
    using CppType = std::shared_ptr<::twentyfortyeight::cpp::GameChangeListener>;
    using CppOptType = std::shared_ptr<::twentyfortyeight::cpp::GameChangeListener>;
    using JniType = jobject;

    using Boxed = GameChangeListener;

    ~GameChangeListener();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<GameChangeListener>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<GameChangeListener>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    GameChangeListener();
    friend ::djinni::JniClass<GameChangeListener>;
    friend ::djinni::JniInterface<::twentyfortyeight::cpp::GameChangeListener, GameChangeListener>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::twentyfortyeight::cpp::GameChangeListener
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void OnGameStateChanged() override;

    private:
        friend ::djinni::JniInterface<::twentyfortyeight::cpp::GameChangeListener, ::twentyfortyeight::jni::GameChangeListener>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/boloutaredoubeni/twentyfortyeight/djinni/GameChangeListener") };
    const jmethodID method_onGameStateChanged { ::djinni::jniGetMethodID(clazz.get(), "onGameStateChanged", "()V") };
};

} }  // namespace twentyfortyeight::jni
